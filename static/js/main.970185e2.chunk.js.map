{"version":3,"sources":["components/Wrapper/index.module.css","components/Button/index.module.css","components/App/index.module.css","components/CellFillingList/index.module.css","reportWebVitals.ts","helpers/class-names.ts","components/Wrapper/index.tsx","hooks/useAppearanceAnimationHelper.ts","components/CellFillingList/CellFillingListItem.tsx","components/CellFillingList/index.tsx","components/Button/index.tsx","components/CellFillingPage/index.tsx","components/App/index.tsx","index.tsx","components/CellFillingPage/index.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","console","error","composeClassNames","classNames","filter","Boolean","join","Wrapper","className","children","style","outerContainer","innerContainer","useAppearanceAnimationHelper","items","animationTimeMS","offsetPX","containerRef","useRef","prevItemsLength","length","containerHeightRef","itemHeightRef","onContainerMounted","useCallback","container","current","containerHeight","window","getComputedStyle","height","setProperty","parseInt","onItemMounted","item","itemHeight","useEffect","maxVisibleItemsCount","Math","round","newTransformHeight","CellFillingListItem","name","description","rest","ref","CSSTransition","timeout","nodeRef","appear","itemAppear","appearActive","itemAppearActive","appearDone","itemAppearDone","enter","itemEnter","enterActive","itemEnterActive","enterDone","itemEnterDone","exit","itemExit","exitActive","itemExitActive","exitDone","itemExitDone","el","itemMap","aliveCell","deadCell","life","CellFillingList","TransitionGroup","component","map","id","type","Button","props","otherProps","getRandomOfTwo","a","b","random","defineTwoLastElementsAreAliveCells","defineTwoLastElementsAreDeadCells","getItemsWithoutLastLife","isLifeRemoved","reduceRight","acc","CellFillingPage","lastId","useState","setItems","isButtonDisabled","setIsButtonDisabled","createItem","setTimeout","heading","list","button","onClick","newItems","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.970185e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"Wrapper_outerContainer__EncuF\",\"innerContainer\":\"Wrapper_innerContainer__3PW7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__20Yby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2oUcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"CellFillingList_outerContainer__1-xxZ\",\"innerContainer\":\"CellFillingList_innerContainer__3bLr8\",\"item\":\"CellFillingList_item__3ULFn\",\"aliveCell\":\"CellFillingList_aliveCell__206We\",\"deadCell\":\"CellFillingList_deadCell__i8WvT\",\"life\":\"CellFillingList_life__3MQD_\",\"itemEnterActive\":\"CellFillingList_itemEnterActive__1OI7L\",\"appearance\":\"CellFillingList_appearance__1hPTN\",\"itemExitActive\":\"CellFillingList_itemExitActive__20PfJ\",\"disappearance\":\"CellFillingList_disappearance__NF4Xt\",\"name\":\"CellFillingList_name__2H-K5\",\"description\":\"CellFillingList_description__2X-gz\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals')\n      .then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      })\n      .catch(console.error);\n  }\n};\n\nexport default reportWebVitals;\n","const composeClassNames = (...classNames: Array<string | undefined | false | null>) =>\n  classNames.filter(Boolean).join(' ');\n\nexport { composeClassNames };\n","import style from './index.module.css';\n\nimport { composeClassNames } from '../../helpers/class-names';\n\ntype Props = React.PropsWithChildren<{\n  className?: string;\n}>;\n\nconst Wrapper: React.FC<Props> = ({ className, children }) => (\n  <div className={style.outerContainer}>\n    <div className={composeClassNames(style.innerContainer, className)}>\n      {children}\n    </div>\n  </div>\n);\n\nexport default Wrapper;\n","import { useCallback, useEffect, useRef } from 'react';\n\nconst useAppearanceAnimationHelper = (items: unknown[], animationTimeMS: number, offsetPX: number) => {\n  const containerRef = useRef<HTMLElement | null>(null);\n  const prevItemsLength = useRef<number>(items.length);\n  const containerHeightRef = useRef<number>();\n  const itemHeightRef = useRef<number>();\n\n  const onContainerMounted = useCallback((container: HTMLElement | null) => {\n    if (!container) return;\n\n    containerRef.current = container;\n\n    const containerHeight = window.getComputedStyle(container).height;\n    container.style.setProperty('--item-transform-height', containerHeight);\n    containerHeightRef.current = parseInt(containerHeight, 10);\n\n    container.style.setProperty('--item-animation-time', `${animationTimeMS}ms`);\n    container.style.setProperty('--item-offset', `${offsetPX}px`);\n  }, [animationTimeMS, offsetPX]);\n\n  const onItemMounted = useCallback((item: HTMLElement | null) => {\n    if (!item) return;\n\n    const itemHeight = window.getComputedStyle(item).height;\n    itemHeightRef.current = parseInt(itemHeight, 10);\n  }, []);\n\n  useEffect(() => {\n    if (!containerRef.current || !containerHeightRef.current || !itemHeightRef.current) return;\n\n    const maxVisibleItemsCount = Math.round(containerHeightRef.current / itemHeightRef.current);\n\n    const newTransformHeight = containerHeightRef.current - (itemHeightRef.current + offsetPX) *\n      (prevItemsLength.current < maxVisibleItemsCount ? prevItemsLength.current : maxVisibleItemsCount);\n\n    containerRef.current.style.setProperty(\n      '--item-transform-height',\n      `${newTransformHeight > itemHeightRef.current ? newTransformHeight : itemHeightRef.current}px`,\n    );\n\n    prevItemsLength.current = items.length;\n  }, [items, offsetPX]);\n\n  return { onContainerMounted, onItemMounted };\n};\n\nexport default useAppearanceAnimationHelper;\n","import { useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { ListItemInfo } from '../../typings/cell-list';\nimport { composeClassNames } from '../../helpers/class-names';\n\nimport style from './index.module.css';\n\ntype Props = ListItemInfo & {\n  onItemMounted: (el: HTMLLIElement | null) => void;\n};\n\nconst APPEARANCE_ANIMATION_TIME_MS = 500;\n\nconst CellFillingListItem: React.FC<Props> = ({ name, description, className, onItemMounted, ...rest }) => {\n  const ref = useRef<HTMLLIElement | null>(null);\n\n  return (\n    <CSSTransition\n      timeout={APPEARANCE_ANIMATION_TIME_MS}\n      nodeRef={ref}\n      classNames={{\n        appear: style.itemAppear,\n        appearActive: style.itemAppearActive,\n        appearDone: style.itemAppearDone,\n        enter: style.itemEnter,\n        enterActive: style.itemEnterActive,\n        enterDone: style.itemEnterDone,\n        exit: style.itemExit,\n        exitActive: style.itemExitActive,\n        exitDone: style.itemExitDone,\n      }}\n      {...rest}\n    >\n      <li\n        ref={(el) => {\n          ref.current = el;\n          onItemMounted(el);\n        }}\n        className={composeClassNames(style.item, className)}\n      >\n        <h2 className={style.name}>{name}</h2>\n        <p className={style.description}>{description}</p>\n      </li>\n    </CSSTransition>\n  );\n};\n\nexport { APPEARANCE_ANIMATION_TIME_MS };\nexport default CellFillingListItem;\n","import { TransitionGroup } from 'react-transition-group';\n\nimport { ListItemInfo, ListItemType } from '../../typings/cell-list';\nimport { composeClassNames } from '../../helpers/class-names';\nimport useAppearanceAnimationHelper from '../../hooks/useAppearanceAnimationHelper';\nimport CellFillingListItem, { APPEARANCE_ANIMATION_TIME_MS } from './CellFillingListItem';\n\nimport style from './index.module.css';\n\ntype Item = {\n  id: string | number;\n  type: ListItemType;\n};\ntype Props = {\n  className?: string;\n  items: Item[];\n};\n\nconst itemMap: Record<ListItemType, ListItemInfo> = {\n  'alive-cell': {\n    name: 'Живая',\n    description: 'и шевелится!',\n    className: style.aliveCell,\n  },\n  'dead-cell': {\n    name: 'Мертвая',\n    description: 'или прикидывается',\n    className: style.deadCell,\n  },\n  'life': {\n    name: 'Жизнь',\n    description: 'Ку-ку!',\n    className: style.life,\n  },\n};\n\nconst ITEM_OFFSET_PX = 4;\n\nconst CellFillingList: React.FC<Props> = ({ className, items }) => {\n  const {\n    onContainerMounted, onItemMounted,\n  } = useAppearanceAnimationHelper(items, APPEARANCE_ANIMATION_TIME_MS, ITEM_OFFSET_PX);\n\n  return (\n    <div className={composeClassNames(style.outerContainer, className)}>\n      <ul ref={onContainerMounted} className={style.innerContainer}>\n        <TransitionGroup component={null}>\n          {items.map(({ id, type }) =>\n            <CellFillingListItem key={id} {...itemMap[type]} onItemMounted={onItemMounted} />)}\n        </TransitionGroup>\n      </ul>\n    </div>\n  );\n};\n\nexport type { Item };\nexport default CellFillingList;\n","import { composeClassNames } from '../../helpers/class-names';\n\nimport style from './index.module.css';\n\nconst Button: React.FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = (props) => {\n  const { className, ...otherProps } = props;\n\n  return (\n    <button\n      className={composeClassNames(style.container, className)}\n      {...otherProps}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useEffect, useRef, useState } from 'react';\n\nimport { ListItemType } from '../../typings/cell-list';\nimport Wrapper from '../Wrapper';\nimport CellFillingList, { Item } from '../CellFillingList';\nimport { APPEARANCE_ANIMATION_TIME_MS } from '../CellFillingList/CellFillingListItem';\nimport Button from '../Button';\n\nimport style from './index.module.css';\n\nconst CellFillingPage: React.FC = () => {\n  const lastId = useRef<number>(0);\n  const [items, setItems] = useState<Item[]>([]);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  const createItem = (type: ListItemType) => ({\n    id: ++lastId.current,\n    type,\n  });\n\n  const onCreateClick = () => {\n    const type = getRandomOfTwo('alive-cell', 'dead-cell');\n\n    const newItems = [\n      // Remove life by condition\n      ...(type === 'dead-cell' && defineTwoLastElementsAreDeadCells(items)\n        ? getItemsWithoutLastLife(items)\n        : items\n      ),\n      // Add new item\n      createItem(type),\n    ];\n\n    setItems(newItems);\n  };\n\n  useEffect(() => {\n    if (defineTwoLastElementsAreAliveCells(items)) {\n      setIsButtonDisabled(true);\n      setTimeout(() => {\n        setItems([...items, createItem('life')]);\n        setIsButtonDisabled(false);\n      }, APPEARANCE_ANIMATION_TIME_MS);\n    }\n  }, [items]);\n\n  return (\n    <Wrapper className={style.container}>\n      <h1 className={style.heading}>Клеточное наполнение</h1>\n      <CellFillingList className={style.list} items={items} />\n      <Button className={style.button} onClick={onCreateClick} disabled={isButtonDisabled}>СОТВОРИТЬ</Button>\n    </Wrapper>\n  );\n};\n\nconst getRandomOfTwo = <A, B> (a: A, b: B) => Math.random() < 0.5 ? a : b;\n\nconst defineTwoLastElementsAreAliveCells = (items: Item[]) =>\n  items[items.length - 1]?.type === 'alive-cell' && items[items.length - 2]?.type === 'alive-cell';\nconst defineTwoLastElementsAreDeadCells = (items: Item[]) =>\n  items[items.length - 1]?.type === 'dead-cell' && items[items.length - 2]?.type === 'dead-cell';\n\nconst getItemsWithoutLastLife = (items: Item[]) => {\n  let isLifeRemoved = false;\n\n  return items.reduceRight<Item[]>((acc, item) => {\n    if (!isLifeRemoved && item.type === 'life') {\n      isLifeRemoved = true;\n      return acc;\n    }\n    return [item, ...acc];\n  }, []);\n};\n\nexport default CellFillingPage;\n","import CellFillingPage from '../CellFillingPage';\n\nimport style from './index.module.css';\n\nconst App: React.FC = () => (\n  <div className={style.container}>\n    <CellFillingPage />\n  </div>\n);\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CellFillingPage_container__2vPTu\",\"heading\":\"CellFillingPage_heading__2AbHN\",\"list\":\"CellFillingPage_list__1K_d2\",\"button\":\"CellFillingPage_button__1_QCL\"};"],"sourceRoot":""}